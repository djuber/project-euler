;; The sequence of triangle numbers is generated by adding the natural numbers. So the 7^(th) triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

;; 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

;; Let us list the factors of the first seven triangle numbers:

;;      1: 1
;;      3: 1,3
;;      6: 1,2,3,6
;;     10: 1,2,5,10
;;     15: 1,3,5,15
;;     21: 1,3,7,21
;;     28: 1,2,4,7,14,28

;; We can see that 28 is the first triangle number to have over five divisors.

;; What is the value of the first triangle number to have over five hundred divisors?

;; Answer:
;; 	76576500

(let ((count 0)
      (last-triangle 0))
  (declare (type fixnum count) (type fixnum last-triangle) (optimize (speed 3) (safety 0)))
  (defun last-triangle ()
    last-triangle)
  (defun next-triangle ()
    (setf last-triangle (+ (incf count) last-triangle))))

(defun divisors (n)
  (declare (type fixnum n) (optimize (speed 3) (safety 0)))
  (let ((result 0))
    (declare (type fixnum result))
    (do ((div 1 (1+ div)))
	((> div n))
      (if (= 0 (mod n div))
	  (incf result)))
    the fixnum result))

(defun p12 (number)
  (declare (type fixnum number) (optimize (speed 3) (safety 0)))
  (do ((triangle (next-triangle) (next-triangle)))
      ((> (the fixnum (divisors triangle)) number))
    (declare (type fixnum triangle))
    ())
  (last-triangle))



