#|

Problem 44
23 May 2003

Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference is pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
|#


;; rethink this. what we want is a such thath a + b, a + 2b are pentagonal
;; so get a bunch of them into a hash table, and lookup a + b, a + 2b


(defun make-pentagonal (n)
  (/ (* n (- (* 3 n) 1)) 2))

(defun pentagonal-numbers (count)
  (loop for i from 1 upto count
     collect (make-pentagonal i)))


(defvar *pentagonal-numbers* (make-hash-table)
  "container for pentagonal numbers")

(defun setup-pentagonal-number-hash (n)
  (loop for i in (pentagonal-numbers n)
       do (setf (gethash i *pentagonal-numbers*) t)))

;;; let's try a hash
(defun is-pentagonal (p)
  (if (gethash p *pentagonal-numbers*)
      t
      (if (pentagonal-p p)
	  (setf (gethash p *pentagonal-numbers*) t)
	  nil)))




;; seeking a such that a + b and a + 2b are pentagonal
(defun p44 ()
  (setup-pentagonal-number-hash 4000)
  (first (loop for lists in 
	      (loop for k1 being the hash-keys of *pentagonal-numbers*
		 append
		   (loop for k2 being the hash-keys of *pentagonal-numbers*
		      when (and (gethash (+ k1 k2) *pentagonal-numbers*)
				(gethash (+ k1 k2 k2) *pentagonal-numbers*))
		      collect k1))
	    when (not (null lists))
	    collect lists)))
  
